@%@UCRWARNING=# @%@
#
# Default Bareos Director Configuration file for disk-only backup
# (C) Bareos GmbH & Co.KG
#
# You have to configure the following for your environment:
#
# (#1) Email Address for bareos disaster recovery.
#      Specify a mailaddress outside of your backupserver.
#      There will be one mail per day.
#
# (#2) Email Address for bareos reports. (Mail Command)
#      This mail address will recieve a report about each backup job.
#      It will be sent after the backupjob is complete.
#      Has to be configured twice ("Standard" and "Daemon" Message Ressources)
#
# (#3) Email Address for bareos operator. (Operator Command)
#      This mail address will recieve a mail immediately when the
#      bareos system needs an operator intervention.
#      May be the same address as in (#2)
#
#
# This disk-only setup stores all data into /var/lib/bareos/storage
#
# In the following description of the backup scheme,  a reference number
# shows where this property is set in the configuration file.
#
# The preconfigured backup scheme is as follows:
#
#   Full Backups are done on first Saturday at 01:00              (#4)
#   Full Backups are written into the "Full" Pool                 (#5)
#   Full Backups are kept for 365 Days                            (#6)
#
#   Differential Backups are done on 2nd to 5th Saturday at 01:00 (#7)
#   Differential Backups are written into the "Differential" Pool (#8)
#   Differential Backups are kept for 90 Days                     (#9)
#
#   Incremental Backups are done monday to friday at 01:00        (#10)
#   Incremental Backups are written into the "Incremental" Pool   (#11)
#   Incremental Backups are kept for 30 Days                      (#12)
#
#
#
#  For Bareos release 13.2.0 (09 April 2013) -- debian 6.0.6
#
#
Director {                            # define myself
  Name = @%@hostname@%@.@%@domainname@%@-dir
  QueryFile = "/usr/lib/bareos/scripts/query.sql"
  Maximum Concurrent Jobs = 10
@!@
with open('/etc/bareos/.rndpwd','r') as f:
  for l in f.readlines():
    if 'DIRECTOR_PASSWORD' in l:
      print "  Password = \"%s\"" % (l.split('=')[1].strip())
@!@
  Messages = Daemon

  # remove comment in next line to load plugins from specified directory
  # Plugin Directory = /usr/lib/bareos/plugins
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = @%@hostname@%@.@%@domainname@%@-fd
  FileSet = "Linux All"
  Schedule = "WeeklyCycle"
  Storage = File
  Messages = Standard
  Pool = Incremental
  Priority = 10
  Write Bootstrap = "/var/lib/bareos/%c.bsr"
  Full Backup Pool = Full                  # write Full Backups into "Full" Pool         (#5)
  Differential Backup Pool = Differential  # write Diff Backups into "Differential" Pool (#8)
  Incremental Backup Pool = Incremental    # write Incr Backups into "Incremental" Pool  (#11)
}

#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /var/lib/bareos/storage

Job {
  Name = "Backup-@%@hostname@%@.@%@domainname@%@"
  JobDefs = "DefaultJob"
  FileSet = "UCS PDC"
  Enabled = "@%@bareos/backup_myself@%@"
}

#
# Backup the catalog database (after the nightly save)
#
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"

  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/usr/lib/bareos/scripts/make_catalog_backup.pl MyCatalog"

  # This deletes the copy of the catalog
  RunAfterJob  = "/usr/lib/bareos/scripts/delete_catalog_backup"

  # This sends the bootstrap via mail for disaster recovery.
  # Should be sent to another system, please change recipient accordingly
  Write Bootstrap = "|/usr/sbin/bsmtp -h localhost -f \"\(Bareos\) \" -s \"Bootstrap for Job %j\" root@localhost" # (#1)
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=@%@hostname@%@.@%@domainname@%@-fd
  FileSet = "Linux All"
  Storage = File
  Pool = Incremental
  Messages = Standard
  Where = /tmp/bareos-restores
}


FileSet {
  Name = "Windows All Drives"
  Enable VSS = yes
  Include {
    Options {
      Signature = MD5
      Drive Type = fixed
      IgnoreCase = yes
      WildFile = "[A-Z]:/pagefile.sys"
      WildDir = "[A-Z]:/RECYCLER"
      WildDir = "[A-Z]:/$RECYCLE.BIN"
      WildDir = "[A-Z]:/System Volume Information"
      Exclude = yes
    }
    File = /
  }
}


FileSet {
  Name = "Linux All"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
      One FS = No     # change into other filessytems
      FS Type = ext2  # filesystems of given types will be backed up
      FS Type = ext3  # others will be ignored
      FS Type = ext4
      FS Type = xfs
      FS Type = reiserfs
      FS Type = jfs
    }
    File = /
  }
  # Things that usually have to be excluded
  # You have to exclude /var/lib/bareos/storage
  # on your bareos server
  Exclude {
    File = /var/lib/bareos
    File = /var/lib/bareos/storage
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }

}

FileSet {
  Name = "UCS PDC"
  Include {
    Options {
      Signature = MD5 # calculate md5 checksum per file
      One FS = No     # change into other filessytems
      FS Type = ext2  # filesystems of given types will be backed up
      FS Type = ext3  # others will be ignored
      FS Type = ext4
      FS Type = xfs
    }
    File = /
  }
  # Things that usually have to be excluded
  # You have to exclude /var/lib/bareos/storage
  # on your bareos server
  Exclude {
    File = /var/lib/bareos
    File = /var/lib/bareos/storage
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }
}

Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sat at 01:00                   # (#4)
  Run = Differential 2nd-5th sat at 01:00       # (#7)
  Run = Incremental mon-fri at 01:00            # (#10)
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full mon-fri at 01:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/lib/bareos/bareos.sql" # database dump
    File = "/etc/bareos"                # configuration
  }
}

# Client (File Services) to backup
Client {
  Name = @%@hostname@%@.@%@domainname@%@-fd
  Address = @%@hostname@%@.@%@domainname@%@
@!@
with open('/etc/bareos/.rndpwd','r') as f:
  for l in f.readlines():
    if 'CLIENT_PASSWORD' in l:
      print "  Password = \"%s\"" % (l.split('=')[1].strip())
@!@
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = no                      # Prune expired Jobs/Files
}

#
# Definition of file storage device
#
Storage {
  Name = File
@!@
with open('/etc/bareos/.rndpwd','r') as f:
  for l in f.readlines():
    if 'STORAGE_PASSWORD' in l:
      print "  Password = \"%s\"" % (l.split('=')[1].strip())
@!@
# Do not use "localhost" here
  Address = @%@hostname@%@.@%@domainname@%@                # N.B. Use a fully qualified name here
  Device = FileStorage
  Media Type = File
}

#
# Generic catalog service
#
Catalog {
  Name = MyCatalog
  # Uncomment the following lines if you want the dbi driver
  # dbdriver = "dbi:postgresql"; dbaddress = 127.0.0.1; dbport =
  dbdriver = "postgresql"
  dbname = "@%@bareos/pgsql/database@%@"
  dbuser = "@%@bareos/pgsql/user@%@"
  dbpassword = ""
}

#
# Reasonable message delivery -- send most everything to email address and to the console
#
Messages {
  Name = Standard
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bareos\) \<%r\>\" -s \"Bareos: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bareos\) \<%r\>\" -s \"Bareos: Intervention needed for %j\" %r"
  mail = root@localhost = all, !skipped # (#2)
  operator = root@localhost = mount     # (#3)
  console = all, !skipped, !saved
  append = "/var/log/bareos/bareos.log" = all, !skipped
  catalog = all
}

#
# Message delivery for daemon messages (no job).
#
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bareos\) \<%r\>\" -s \"Bareos daemon message\" %r"
  mail = root@localhost = all, !skipped # (#2)
  console = all, !skipped, !saved
  append = "/var/log/bareos/bareos.log" = all, !skipped
}


#
# Full Pool definition
#
Pool {
  Name = Full
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # How long should the Full Backups be kept? (#6)
  Maximum Volume Bytes = 10G          # Limit Volume size to something reasonable
  Maximum Volumes = @%@bareos/max_full_volumes@%@ # Limit number of Volumes in Pool
  Label Format = "Full-"              # Volumes will be labeled "Full-<volume-id>"
}

#
# Differential Pool definition
#
Pool {
  Name = Differential
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 90 days          # How long should the Differential Backups be kept? (#9)
  Maximum Volume Bytes = 10G          # Limit Volume size to something reasonable
  Maximum Volumes = @%@bareos/max_diff_volumes@%@ # Limit number of Volumes in Pool
  Label Format = "Differential-"      # Volumes will be labeled "Differential-<volume-id>"
}

#
# Incremental Pool definition
#
Pool {
  Name = Incremental
  Pool Type = Backup
  Recycle = yes                       # Bareos can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 30 days          # How long should the Incremental Backups be kept?  (#12)
  Maximum Volume Bytes = 10G           # Limit Volume size to something reasonable
  Maximum Volumes = @%@bareos/max_incr_volumes@%@ # Limit number of Volumes in Pool
  Label Format = "Incremental-"       # Volumes will be labeled "Incremental-<volume-id>"
}

#
# Scratch pool definition
#
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = @%@hostname@%@.@%@domainname@%@-mon
  Password = "monitor"
  CommandACL = status, .status
}

@/etc/bareos/autogenerated/clients.include
